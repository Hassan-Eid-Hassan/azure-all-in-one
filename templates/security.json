{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.54.24096",
      "templateHash": "14680538243429534307"
    }
  },
  "parameters": {
    "projectName": {
      "type": "string",
      "defaultValue": "DFP",
      "metadata": {
        "description": "Specifies a project name that is used for generating resource names."
      }
    },
    "sharedKey": {
      "type": "securestring",
      "metadata": {
        "description": "The shared key used to establish connection between the two VirtualNetworkGateways."
      }
    },
    "vmlocation": {
      "type": "string",
      "defaultValue": "germanywestcentral",
      "metadata": {
        "description": "Location for all resources related to VMs."
      }
    },
    "dblocation": {
      "type": "string",
      "defaultValue": "northeurope",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "ddosProtectionPlanName": "depiDdosProtectionPlan",
    "PIPSkuName": "Standard",
    "lbPublicIpAddressName": "[format('{0}-lbPublicIP', parameters('projectName'))]",
    "bastionPublicIPAddressName": "[format('{0}-bastionPublicIP', parameters('projectName'))]",
    "dbVnetGatewayPublicIpAddressName": "[format('{0}-dbVnetGatewayPublicIP', parameters('projectName'))]",
    "webVnetGatewayPublicIpAddressName": "[format('{0}-webVnetGatewayPublicIP', parameters('projectName'))]",
    "nsgName": "[format('{0}-nsg', parameters('projectName'))]",
    "vNetWebName": "[format('{0}-web-vnet', parameters('projectName'))]",
    "vNetDbName": "[format('{0}-db-vnet', parameters('projectName'))]",
    "bastionName": "[format('{0}-bastion', parameters('projectName'))]",
    "bastionSubnetName": "AzureBastionSubnet",
    "dbVnetGatewayName": "DepiDbVnetGateway",
    "webVnetGatewayName": "DepiWebVnetGateway",
    "connectionDbToWebName": "depiVpnDbToWeb",
    "connectionWebToDbName": "depiVpnWebToDb"
  },
  "resources": [
    {
      "type": "Microsoft.Network/ddosProtectionPlans",
      "apiVersion": "2020-11-01",
      "name": "[variables('ddosProtectionPlanName')]",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-08-01",
      "name": "[variables('bastionPublicIPAddressName')]",
      "location": "[parameters('vmlocation')]",
      "sku": {
        "name": "[variables('PIPSkuName')]"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "ddosSettings": {
          "ddosProtectionPlan": {
            "id": "[resourceId('Microsoft.Network/ddosProtectionPlans', variables('ddosProtectionPlanName'))]"
          },
          "protectionMode": "Enabled"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/ddosProtectionPlans', variables('ddosProtectionPlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-08-01",
      "name": "[variables('lbPublicIpAddressName')]",
      "location": "[parameters('vmlocation')]",
      "sku": {
        "name": "[variables('PIPSkuName')]"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "ddosSettings": {
          "ddosProtectionPlan": {
            "id": "[resourceId('Microsoft.Network/ddosProtectionPlans', variables('ddosProtectionPlanName'))]"
          },
          "protectionMode": "Enabled"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/ddosProtectionPlans', variables('ddosProtectionPlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-05-01",
      "name": "[variables('dbVnetGatewayPublicIpAddressName')]",
      "location": "[parameters('dblocation')]",
      "sku": {
        "name": "[variables('PIPSkuName')]"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "ddosSettings": {
          "ddosProtectionPlan": {
            "id": "[resourceId('Microsoft.Network/ddosProtectionPlans', variables('ddosProtectionPlanName'))]"
          },
          "protectionMode": "Enabled"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/ddosProtectionPlans', variables('ddosProtectionPlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-05-01",
      "name": "[variables('webVnetGatewayPublicIpAddressName')]",
      "location": "[parameters('vmlocation')]",
      "sku": {
        "name": "[variables('PIPSkuName')]"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "ddosSettings": {
          "ddosProtectionPlan": {
            "id": "[resourceId('Microsoft.Network/ddosProtectionPlans', variables('ddosProtectionPlanName'))]"
          },
          "protectionMode": "Enabled"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/ddosProtectionPlans', variables('ddosProtectionPlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-08-01",
      "name": "[variables('nsgName')]",
      "location": "[parameters('vmlocation')]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowHTTPInbound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/bastionHosts",
      "apiVersion": "2021-08-01",
      "name": "[variables('bastionName')]",
      "location": "[parameters('vmlocation')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "IpConf",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPublicIPAddressName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetWebName'), variables('bastionSubnetName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPublicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetWebName'), variables('bastionSubnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "apiVersion": "2020-05-01",
      "name": "[variables('dbVnetGatewayName')]",
      "location": "[parameters('dblocation')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "vnetGatewayConfig1",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('dbVnetGatewayPublicIpAddressName'))]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetDbName'), 'GatewaySubnet')]"
              }
            }
          }
        ],
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetDbName'), 'GatewaySubnet')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('dbVnetGatewayPublicIpAddressName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "apiVersion": "2020-05-01",
      "name": "[variables('webVnetGatewayName')]",
      "location": "[parameters('vmlocation')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "vnetGatewayConfig2",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('webVnetGatewayPublicIpAddressName'))]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetWebName'), 'GatewaySubnet')]"
              }
            }
          }
        ],
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetWebName'), 'GatewaySubnet')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('webVnetGatewayPublicIpAddressName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/connections",
      "apiVersion": "2020-05-01",
      "name": "[variables('connectionDbToWebName')]",
      "location": "[parameters('dblocation')]",
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('dbVnetGatewayName'))]"
        },
        "virtualNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('webVnetGatewayName'))]"
        },
        "connectionType": "Vnet2Vnet",
        "routingWeight": 3,
        "sharedKey": "[parameters('sharedKey')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('webVnetGatewayName'))]",
        "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('dbVnetGatewayName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/connections",
      "apiVersion": "2020-05-01",
      "name": "[variables('connectionWebToDbName')]",
      "location": "[parameters('vmlocation')]",
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('webVnetGatewayName'))]"
        },
        "virtualNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('dbVnetGatewayName'))]"
        },
        "connectionType": "Vnet2Vnet",
        "routingWeight": 3,
        "sharedKey": "[parameters('sharedKey')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('webVnetGatewayName'))]",
        "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('dbVnetGatewayName'))]"
      ]
    }
  ]
}